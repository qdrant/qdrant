name: Build the Docker image
description: "Build and push a branch image to container registries"

inputs:
  ghcr-password:
    description: 'Password for GitHub Container Registry'
    required: false
  dockerhub-password:
    description: 'Password for Docker Hub'
    required: false
  push-to-ghcr:
    description: 'Push to GitHub Container Registry'
    required: true
    default: 'false'
  push-to-dockerhub:
    description: 'Push to Docker Hub'
    required: true
    default: 'false'
  build-gpu:
    description: 'Build GPU images instead of regular images'
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Execution
      shell: bash
      run: |
        buildx_containers=$(docker container ls -a -qf "name=buildx_buildkit" | tr '\n' ' ')
        buildx_volumes=$(docker volume ls -qf "name=buildx_buildkit" | tr '\n' ' ')

        if [ -n "$buildx_containers" ]; then
          echo "Buildx containers to delete: $buildx_containers"
          docker container rm -f $buildx_containers
        fi

        if [ -n "$buildx_volumes" ]; then
          echo "Buildx volumes to delete: $buildx_volumes"
          docker volume rm -f $buildx_volumes
        fi

        branch_tmp=$(git rev-parse --abbrev-ref HEAD)
        branch=${branch_tmp//\//-} # replace all / with -
        echo "Building branch ${branch}"

        # Create build container
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker buildx create --use

        # Authenticate on registries
        if [ "${{ inputs.push-to-ghcr }}" = "true" ]; then
          docker login ghcr.io -u qdrant --password "${{ inputs.ghcr-password }}"
        fi
        if [ "${{ inputs.push-to-dockerhub }}" = "true" ]; then
          docker login docker.io -u qdrant --password "${{ inputs.dockerhub-password }}"
        fi

        GIT_COMMIT_ID="$(git rev-parse HEAD)"

        # Build base tags array
        tags=()
        if [ "${{ inputs.push-to-ghcr }}" = "true" ]; then
          tags+=("ghcr.io/qdrant/qdrant:${branch}-${GIT_COMMIT_ID}")
          tags+=("ghcr.io/qdrant/qdrant:${branch}")
        fi
        if [ "${{ inputs.push-to-dockerhub }}" = "true" ]; then
          tags+=("qdrant/qdrant:${branch}-${GIT_COMMIT_ID}")
          tags+=("qdrant/qdrant:${branch}")
        fi

        # Exit if no tags to build
        if [ ${#tags[@]} -eq 0 ]; then
          echo "No registry enabled for push"
          exit 1
        fi

        # Function to build and push with given suffix and build args
        build_image() {
          local suffix="$1"
          local platform="$2"
          local build_args="$3"

          # Create modified tags with suffix
          local build_tags=()
          local tag
          for tag in "${tags[@]}"; do
            build_tags+=("-t" "${tag}${suffix}")
          done

          echo "Building with tags: ${build_tags[*]}"
          docker buildx build --platform="$platform" \
            --build-arg GIT_COMMIT_ID="${GIT_COMMIT_ID}" \
            $build_args \
            "${build_tags[@]}" \
            --push --label "org.opencontainers.image.revision"="${GIT_COMMIT_ID}" .
        }

        # Build images based on type
        if [ "${{ inputs.build-gpu }}" = "true" ]; then
          echo "Building GPU images"
          build_image "-gpu-nvidia" "linux/amd64" "--build-arg GPU=nvidia"
          build_image "-gpu-amd" "linux/amd64" "--build-arg GPU=amd"
        else
          echo "Building regular image"
          build_image "" "linux/amd64,linux/arm64" ""
        fi
